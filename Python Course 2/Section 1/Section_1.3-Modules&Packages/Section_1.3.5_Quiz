1.3.5 SECTION QUIZ

Question 1: You want to prevent your module's user from running your code as an ordinary script.
How will you achieve such an effect?

writing the module with _ or __ prefix # own answer

like this
import sys

if __name__ == "__main__":
    print "Don't do that!"
    sys.exit()

Question 2: Some additional and necessary packages are stored inside the D:\Python\Project\Modules directory.
Write a code ensuring that the directory is traversed by Python in order to find all requested modules.

from sys import path # my own answer! :D

path.append("..\\Modules")   # my own answer! :D

import sys  # course answer

# note the double backslashes!
sys.path.append("D:\\Python\\Project\\Modules") # course answer

Question 3: The directory mentioned in the previous exercise contains a sub-tree of the following structure:

abc
 |__ def
     |__ mymodule.py

Assuming that D:\Python\Project\Modules has been successfully appended to the sys.path list,
write an import directive letting you use all the mymodule entities.

from sys import path

import abc.def.mymodule # own answer = course answer


